{{- $root := . -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "next.fullname" . }}-nginx-default
  labels:
    {{- include "next.labels" . | nindent 4 }}
data:
  default.conf: |
    map_hash_max_size 2048;
    map_hash_bucket_size 2048;

    upstream next_server{
      server 127.0.0.1:3000;
    }
    server {
    listen 80;
    server_name _;

    set_real_ip_from    127.0.0.1;

    proxy_headers_hash_max_size     512;
    proxy_headers_hash_bucket_size  128;
    proxy_connect_timeout           300;

    client_header_timeout           300;
    client_body_timeout             300;

    # Buffer
    proxy_buffer_size               512k;
    proxy_buffers               128 512k;
    client_body_buffer_size        2048k;
    client_header_buffer_size      2048k;
    large_client_header_buffers 256 8192k;

    # security headers
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN";

    location / {
        proxy_send_timeout    300;
        proxy_read_timeout    300;
        send_timeout          300;
        proxy_pass   http://next_server; # Proxy pass to next
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        #Option Handler
        if ($request_method ~ ^(OPTIONS)$ ){
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Access-Control-Allow-Headers' 'Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,Accept,Authorization,X-Requested-With,store';
            add_header 'Access-Control-Expose-Headers' 'Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,Accept,Authorization,X-Requested-With,store';
            return 200;
            break;
        }

    }
    location = /maintenance.html {
        root   /usr/share/nginx/html;
    }

    error_page	 405 =200 $uri;
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    }